<source>
  @type tail
  path /var/log/rancher-log-volumes/apache2/*/*
  pos_file /fluentd/etc/log/custom_cluster_apache2.log.pos
  tag cluster-custom.*
  format /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)?$/ 
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  path /var/log/rancher-log-volumes/nginx/*/* 
  pos_file /fluentd/etc/log/custom_cluster_nginx.log.pos
  tag cluster-custom.*
  format /^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)") (?<gzip_ratio>[^ ]*)?$/
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  path /var/log/rancher-log-volumes/rfc3164/*/*
  pos_file /fluentd/etc/log/custom_cluster_rfc3164.log.pos
  tag cluster-custom.*
  format /^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$/
  time_format "%b %d %H:%M:%S"
</source>

<source>
  @type tail
  path /var/log/rancher-log-volumes/rfc5424/*/*
  pos_file /fluentd/etc/log/custom_cluster_rfc5424.log.pos
  tag cluster-custom.*
  format /\A^\<(?<pri>[0-9]{1,3})\>[1-9]\d{0,2} (?<time>[^ ]+) (?<host>[^ ]+) (?<ident>[^ ]+) (?<pid>[-0-9]+) (?<msgid>[^ ]+) (?<extradata>(\[(.*)\]|[^ ])) (?<message>.+)$\z/
  time_format "%Y-%m-%dT%H:%M:%S.%L%z"
</source>

<source>
  @type tail
  path /var/log/rancher-log-volumes/json/*/*
  pos_file /fluentd/etc/log/custom_cluster_json.log.pos
  tag cluster-custom.*
  format json
</source>

<source>
  @type tail
  path /var/log/rancher-log-volumes/ltsv/*/*
  pos_file /fluentd/etc/log/custom_cluster_ltsv.log.pos
  tag cluster-custom.*
  format ltsv
</source>

<filter cluster-custom.**>
  @type record_transformer
  enable_ruby true  
  <record>
    tag ${tag}
    cluster_id ${component = tag.match(Regexp.compile('cluster-custom\.var\.log\.rancher-log-volumes\.(?<format>[a-z0-9]+)\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['cluster_id']}
    cluster_name ${component = tag.match(Regexp.compile('cluster-custom\.var\.log\.rancher-log-volumes\.(?<format>[a-z0-9]+)\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['cluster_name']}
    namespace ${component = tag.match(Regexp.compile('cluster-custom\.var\.log\.rancher-log-volumes\.(?<format>[a-z0-9]+)\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['namespace']}
    project_id ${component = tag.match(Regexp.compile('cluster-custom\.var\.log\.rancher-log-volumes\.(?<format>[a-z0-9]+)\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['project_id']}
    project_name ${component = tag.match(Regexp.compile('cluster-custom\.var\.log\.rancher-log-volumes\.(?<format>[a-z0-9]+)\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['project_name']}
    workload_name ${component = tag.match(Regexp.compile('cluster-custom\.var\.log\.rancher-log-volumes\.(?<format>[a-z0-9]+)\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['workload_name']}
    container_name ${component = tag.match(Regexp.compile('cluster-custom\.var\.log\.rancher-log-volumes\.(?<format>[a-z0-9]+)\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['container_name']}
    volume_name ${component = tag.match(Regexp.compile('cluster-custom\.var\.log\.rancher-log-volumes\.(?<format>[a-z0-9]+)\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['volume_name']}
    filename ${component = tag.match(Regexp.compile('cluster-custom\.var\.log\.rancher-log-volumes\.(?<format>[a-z0-9]+)\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['filename']}
    format ${component = tag.match(Regexp.compile('cluster-custom\.var\.log\.rancher-log-volumes\.(?<format>[a-z0-9]+)\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['format']}
  </record>
</filter>